# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# Binet's Formula for the nth Fibonacci number
from math import sqrt

def sum_even_fib(max):
    first_fib = 0
    second_fib = 1
    sum_fibs = 0
    while second_fib < max:
        if second_fib % 2 == 0:
            sum_fibs += second_fib
        temp = second_fib
        second_fib  = second_fib + first_fib
        first_fib = temp
    return sum_fibs

print(sum_even_fib(4000000))
